// Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
apply plugin: 'java-gradle-plugin'

// Apply the Groovy plugin to add support for Groovy
apply plugin: 'groovy'

// 应用 Maven Publish Plugin 发布插件
apply plugin: 'maven-publish'

dependencies {

    implementation gradleApi()
    implementation 'com.android.tools.build:gradle:4.1.1'
    //javaassist依赖
    implementation 'org.javassist:javassist:3.20.0-GA'
    implementation 'commons-io:commons-io:2.6'

    implementation localGroovy()
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}



/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/custom_plugins.html
 */
//gradle教程
//https://blog.csdn.net/innost/article/details/48228651
//自定义本地maven库
//https://github.com/jjbheda/gradlePluginDemo/blob/master/timestatistics/build.gradle



repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    google()
    mavenCentral()
    maven { url 'https://www.jitpack.io' }
}

gradlePlugin {
    // Define the plugin
    plugins {
        hello {
            id = 'com.hot.plugin'
            implementationClass = 'com.hotpatch.plugin.Register'
        }
    }
}

publishing {
    publications {
        hello(MavenPublication) {
            // 插件的组ID，建议设置为插件的包名
            groupId = 'com.hot.plugin'
            // 翻译过来是 工件ID，我的理解是插件的名字
            artifactId = 'hot'
            version = '1.0.0'
            // 组件类型，我们的插件其实就是Java组件
            from components.java
        }
    }

    repositories {
        maven {
            // $rootProject 表示你项目的根目录
            url = "$rootDir/repo"
        }
    }
}


